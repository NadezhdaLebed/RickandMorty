{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\RickandMorty\\\\src\\\\pages\\\\EpisodePage\\\\EpisodePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport superagent from 'superagent';\nimport { makeStyles } from '@material-ui/core';\nimport Table from '../../components/Table/BasicTable';\nimport EpisodeModal from '../../components/Modals/EpisodeModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  title: {\n    textAlign: 'center',\n    borderBottom: '1px solid #00c8c8',\n    paddingBottom: '5px',\n    marginBottom: '20px'\n  }\n});\nconst columns = [{\n  id: 'name',\n  label: 'Name'\n}, {\n  id: 'episode',\n  label: 'Episode'\n}, {\n  id: 'air_date',\n  label: 'Air date'\n}];\n\nconst EpisodePage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [episode, setEpisode] = useState([]);\n  const [info, setInfo] = useState();\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [episodeItem, setEpisodeItem] = useState(null);\n  useEffect(() => {\n    superagent.get('https://rickandmortyapi.com/api/episode').query({\n      page: page + 1\n    }).then(response => {\n      const {\n        results,\n        info\n      } = response.body;\n      setEpisode(results);\n      setInfo(info);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [page]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleClickOpen = id => {\n    const foundCh = episode.find(ch => ch.id === id);\n\n    if (foundCh) {\n      setOpen(true);\n      setEpisodeItem(foundCh);\n    }\n  };\n\n  const handleClickClose = () => {\n    setOpen(false);\n    setEpisodeItem(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: \"Episode page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        page: page,\n        columns: columns,\n        rowsPerPage: rowsPerPage,\n        rows: episode,\n        count: info && info.count,\n        handleChangePage: handleChangePage,\n        handleChangeRowsPerPage: handleChangeRowsPerPage,\n        handleOpen: handleClickOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EpisodeModal, {\n      open: open,\n      handleClose: handleClickClose,\n      episodeItem: episodeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EpisodePage, \"4jTTeBCaLgSTCfBuWBPUcv63Vp4=\", false, function () {\n  return [useStyles];\n});\n\n_c = EpisodePage;\nexport default EpisodePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EpisodePage\");","map":{"version":3,"sources":["D:/projects/RickandMorty/src/pages/EpisodePage/EpisodePage.jsx"],"names":["React","useEffect","useState","superagent","makeStyles","Table","EpisodeModal","useStyles","title","textAlign","borderBottom","paddingBottom","marginBottom","columns","id","label","EpisodePage","classes","episode","setEpisode","info","setInfo","page","setPage","open","setOpen","episodeItem","setEpisodeItem","get","query","then","response","results","body","catch","error","console","handleChangePage","event","newPage","handleClickOpen","foundCh","find","ch","handleClickClose","container","rowsPerPage","count","handleChangeRowsPerPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,YAAY,EAAE,mBAFT;AAGLC,IAAAA,aAAa,EAAE,KAHV;AAILC,IAAAA,YAAY,EAAE;AAJT;AADoB,CAAD,CAA5B;AASA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,EAAE,EAAE,SADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,CAAhB;;AAeA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,EAAhC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,CAACyB,GAAX,CAAe,yCAAf,EACCC,KADD,CACO;AAAEP,MAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf,KADP,EAECQ,IAFD,CAEMC,QAAQ,IAAI;AAChB,YAAM;AAAEC,QAAAA,OAAF;AAAWZ,QAAAA;AAAX,UAAoBW,QAAQ,CAACE,IAAnC;AACAd,MAAAA,UAAU,CAACa,OAAD,CAAV;AACAX,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAND,EAOCc,KAPD,CAOOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KATD;AAUD,GAXQ,EAWN,CAACb,IAAD,CAXM,CAAT;;AAaA,QAAMe,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3ChB,IAAAA,OAAO,CAACgB,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAI1B,EAAD,IAAQ;AAC9B,UAAM2B,OAAO,GAAGvB,OAAO,CAACwB,IAAR,CAAcC,EAAD,IAAQA,EAAE,CAAC7B,EAAH,KAAUA,EAA/B,CAAhB;;AAGA,QAAI2B,OAAJ,EAAa;AACXhB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,cAAc,CAACc,OAAD,CAAd;AACD;AACF,GARD;;AAUD,QAAMG,gBAAgB,GAAG,MAAM;AAC7BnB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAKC,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEV,OAAO,CAAC4B,SAAxB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAE5B,OAAO,CAACT,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAEc,IADR;AAEE,QAAA,OAAO,EAAET,OAFX;AAGE,QAAA,WAAW,EAAEiC,WAHf;AAIE,QAAA,IAAI,EAAE5B,OAJR;AAKE,QAAA,KAAK,EAAEE,IAAI,IAAIA,IAAI,CAAC2B,KALtB;AAME,QAAA,gBAAgB,EAAEV,gBANpB;AAOE,QAAA,uBAAuB,EAAEW,uBAP3B;AAQE,QAAA,UAAU,EAAER;AARd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAcA,QAAC,YAAD;AACE,MAAA,IAAI,EAAEhB,IADR;AAEE,MAAA,WAAW,EAAEoB,gBAFf;AAGE,MAAA,WAAW,EAAElB;AAHf;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA,kBADF;AAsBD,CA/DD;;GAAMV,W;UACYT,S;;;KADZS,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport superagent from 'superagent';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Table from '../../components/Table/BasicTable';\r\nimport EpisodeModal from '../../components/Modals/EpisodeModal';\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #00c8c8',\r\n    paddingBottom: '5px',\r\n    marginBottom: '20px',\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    label: 'Name',\r\n  },\r\n  {\r\n    id: 'episode',\r\n    label: 'Episode',\r\n  },\r\n  {\r\n    id: 'air_date',\r\n    label: 'Air date',\r\n  }\r\n];\r\n\r\nconst EpisodePage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [episode, setEpisode] = useState([]);\r\n  const [info, setInfo] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [episodeItem, setEpisodeItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    superagent.get('https://rickandmortyapi.com/api/episode')\r\n    .query({ page: page + 1 })\r\n    .then(response => {\r\n      const { results, info } = response.body;\r\n      setEpisode(results);\r\n      setInfo(info)\r\n    })\r\n    .catch(error => {\r\n      console.error(error)\r\n    });\r\n  }, [page]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleClickOpen = (id) => {\r\n    const foundCh = episode.find((ch) => ch.id === id);\r\n\r\n    \r\n    if (foundCh) {\r\n      setOpen(true);\r\n      setEpisodeItem(foundCh);\r\n    }\r\n  };\r\n\r\n const handleClickClose = () => {\r\n   setOpen(false);\r\n   setEpisodeItem(null);\r\n };\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.container}>\r\n      <h2 className={classes.title}>Episode page</h2>\r\n      <Table\r\n        page={page}\r\n        columns={columns}\r\n        rowsPerPage={rowsPerPage}\r\n        rows={episode}\r\n        count={info && info.count}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        handleOpen={handleClickOpen}\r\n      />\r\n    </div>\r\n    <EpisodeModal\r\n      open={open}\r\n      handleClose={handleClickClose}\r\n      episodeItem={episodeItem}\r\n    />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpisodePage;"]},"metadata":{},"sourceType":"module"}